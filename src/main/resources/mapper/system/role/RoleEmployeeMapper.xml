<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hooke.zdl.admin.module.system.role.dao.RoleEmployeeDao">


    <resultMap id="EmployeeVO"
               type="com.hooke.zdl.admin.module.system.employee.domain.vo.EmployeeVO"></resultMap>


    <select id="selectRoleByEmployeeId" resultType="com.hooke.zdl.admin.module.system.role.domain.vo.RoleVO">
        SELECT zdl_admin_role.*
        FROM zdl_admin_role_employee
        left join zdl_admin_role on zdl_admin_role_employee.role_id = zdl_admin_role.role_id
        WHERE zdl_admin_role_employee.employee_id = #{employeeId}
    </select>

    <select id="selectRoleIdByEmployeeId" resultType="java.lang.Long">
        SELECT er.role_id
        FROM zdl_admin_role_employee er
        WHERE er.employee_id = #{employeeId}
    </select>


    <select id="selectRoleEmployeeByName" resultMap="EmployeeVO">
        SELECT
        zdl_admin_employee.employee_id,
        zdl_admin_employee.login_name,
        zdl_admin_employee.login_pwd,
        zdl_admin_employee.actual_name,
        zdl_admin_employee.phone,
        zdl_admin_employee.department_id,
        zdl_admin_employee.disabled_flag,
        zdl_admin_employee.remark,
        zdl_admin_employee.update_time,
        zdl_admin_employee.create_time
        FROM
        zdl_admin_role_employee
        left join zdl_admin_employee  on zdl_admin_role_employee.employee_id = zdl_admin_employee.employee_id
        left join zdl_admin_role  on zdl_admin_role_employee.role_id = zdl_admin_role.role_id
        <where>
            <if test="queryForm.keywords != null and queryForm.keywords!= ''">
                AND (
                INSTR(t_employee.actual_name,#{queryForm.keywords})
                OR INSTR(t_employee.phone,#{queryForm.keywords})
                OR INSTR(t_employee.login_name,#{queryForm.keywords})
                )
            </if>
            <if test="queryForm.roleId != null">
                AND zdl_admin_role_employee.role_id = #{queryForm.roleId}
            </if>
        </where>
    </select>

    <select id="selectEmployeeByRoleId" resultMap="EmployeeVO">
        SELECT zdl_admin_employee.employee_id,
               zdl_admin_employee.login_name,
               zdl_admin_employee.login_pwd,
               zdl_admin_employee.actual_name,
               zdl_admin_employee.phone,
               zdl_admin_employee.department_id,
               zdl_admin_employee.disabled_flag,
               zdl_admin_employee.remark,
               zdl_admin_employee.update_time,
               zdl_admin_employee.create_time
        FROM zdl_admin_role_employee
        left join zdl_admin_employee  on zdl_admin_role_employee.employee_id = zdl_admin_employee.employee_id
        WHERE zdl_admin_role_employee.role_id = #{roleId}
    </select>

    <select id="selectEmployeeIdByRoleIdList" resultType="java.lang.Long">
        SELECT
        employee_id
        FROM
        zdl_admin_role_employee
        WHERE
        role_id in
        <foreach collection="roleIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>
    <select id="selectRoleIdByEmployeeIdList"
            resultType="com.hooke.zdl.admin.module.system.role.domain.entity.RoleEmployeeEntity">
        SELECT
        *
        FROM
        zdl_admin_role_employee
        WHERE
        employee_id in
        <foreach collection="employeeIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>

    <select id="selectRoleByEmployeeIdList"
            resultType="com.hooke.zdl.admin.module.system.role.domain.vo.RoleEmployeeVO">
        SELECT
        zdl_admin_role_employee.role_id,
        zdl_admin_role_employee.employee_id,
        zdl_admin_role.role_name
        FROM
        zdl_admin_role_employee
        LEFT JOIN zdl_admin_role  ON zdl_admin_role.role_id = zdl_admin_role_employee.role_id
        WHERE
        employee_id in
        <foreach collection="employeeIdList" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>




    <delete id="deleteByEmployeeId">
        DELETE
        FROM zdl_admin_role_employee
        WHERE employee_id = #{employeeId}
    </delete>


    <delete id="deleteByRoleId">
        DELETE
        FROM zdl_admin_role_employee
        WHERE role_id = #{roleId}
    </delete>

    <delete id="deleteByEmployeeIdRoleId">
        DELETE
        FROM zdl_admin_role_employee
        WHERE role_id = #{roleId}
          and employee_id = #{employeeId}
    </delete>


    <delete id="batchDeleteEmployeeRole">
        DELETE FROM zdl_admin_role_employee
        WHERE role_id = #{roleId} and employee_id in
        <foreach collection="employeeIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </delete>

    <select id="existsByRoleId" resultType="java.lang.Integer">
        SELECT 1
        FROM zdl_admin_role_employee er
        WHERE er.role_id = #{roleId}
        LIMIT 1
    </select>

</mapper>